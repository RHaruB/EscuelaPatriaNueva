#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EscuelaPatriaNueva
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EscuelaPatriaNueva")]
	public partial class ConexionDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCurso(Curso instance);
    partial void UpdateCurso(Curso instance);
    partial void DeleteCurso(Curso instance);
    partial void InsertDocente(Docente instance);
    partial void UpdateDocente(Docente instance);
    partial void DeleteDocente(Docente instance);
    partial void InsertEstudiante(Estudiante instance);
    partial void UpdateEstudiante(Estudiante instance);
    partial void DeleteEstudiante(Estudiante instance);
    partial void InsertMatricula(Matricula instance);
    partial void UpdateMatricula(Matricula instance);
    partial void DeleteMatricula(Matricula instance);
    partial void InsertPersona(Persona instance);
    partial void UpdatePersona(Persona instance);
    partial void DeletePersona(Persona instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    #endregion
		
		public ConexionDBDataContext() : 
				base(global::EscuelaPatriaNueva.Properties.Settings.Default.EscuelaPatriaNuevaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Curso> Curso
		{
			get
			{
				return this.GetTable<Curso>();
			}
		}
		
		public System.Data.Linq.Table<Docente> Docente
		{
			get
			{
				return this.GetTable<Docente>();
			}
		}
		
		public System.Data.Linq.Table<Estudiante> Estudiante
		{
			get
			{
				return this.GetTable<Estudiante>();
			}
		}
		
		public System.Data.Linq.Table<Matricula> Matricula
		{
			get
			{
				return this.GetTable<Matricula>();
			}
		}
		
		public System.Data.Linq.Table<MatriculaCurso> MatriculaCurso
		{
			get
			{
				return this.GetTable<MatriculaCurso>();
			}
		}
		
		public System.Data.Linq.Table<Persona> Persona
		{
			get
			{
				return this.GetTable<Persona>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Listar_Usuarios")]
		public ISingleResult<SP_Listar_UsuariosResult> SP_Listar_Usuarios()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<SP_Listar_UsuariosResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Insert_Usuario")]
		public int SP_Insert_Usuario([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(13)")] string cedula, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string apellido, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string telefono, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string direccion, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> fecha_nacimiento, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(25)")] string usuario, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string contrasena)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cedula, nombre, apellido, telefono, direccion, fecha_nacimiento, usuario, contrasena);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Curso")]
	public partial class Curso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCurso;
		
		private System.Nullable<int> _IdDocente;
		
		private string _Descripcion;
		
		private EntityRef<Docente> _Docente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCursoChanging(int value);
    partial void OnIdCursoChanged();
    partial void OnIdDocenteChanging(System.Nullable<int> value);
    partial void OnIdDocenteChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Curso()
		{
			this._Docente = default(EntityRef<Docente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCurso", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCurso
		{
			get
			{
				return this._IdCurso;
			}
			set
			{
				if ((this._IdCurso != value))
				{
					this.OnIdCursoChanging(value);
					this.SendPropertyChanging();
					this._IdCurso = value;
					this.SendPropertyChanged("IdCurso");
					this.OnIdCursoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDocente", DbType="Int")]
		public System.Nullable<int> IdDocente
		{
			get
			{
				return this._IdDocente;
			}
			set
			{
				if ((this._IdDocente != value))
				{
					if (this._Docente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDocenteChanging(value);
					this.SendPropertyChanging();
					this._IdDocente = value;
					this.SendPropertyChanged("IdDocente");
					this.OnIdDocenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Docente_Curso", Storage="_Docente", ThisKey="IdDocente", OtherKey="IdDocente", IsForeignKey=true)]
		public Docente Docente
		{
			get
			{
				return this._Docente.Entity;
			}
			set
			{
				Docente previousValue = this._Docente.Entity;
				if (((previousValue != value) 
							|| (this._Docente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Docente.Entity = null;
						previousValue.Curso.Remove(this);
					}
					this._Docente.Entity = value;
					if ((value != null))
					{
						value.Curso.Add(this);
						this._IdDocente = value.IdDocente;
					}
					else
					{
						this._IdDocente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Docente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Docente")]
	public partial class Docente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDocente;
		
		private System.Nullable<int> _IdPersona;
		
		private EntitySet<Curso> _Curso;
		
		private EntityRef<Persona> _Persona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDocenteChanging(int value);
    partial void OnIdDocenteChanged();
    partial void OnIdPersonaChanging(System.Nullable<int> value);
    partial void OnIdPersonaChanged();
    #endregion
		
		public Docente()
		{
			this._Curso = new EntitySet<Curso>(new Action<Curso>(this.attach_Curso), new Action<Curso>(this.detach_Curso));
			this._Persona = default(EntityRef<Persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDocente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDocente
		{
			get
			{
				return this._IdDocente;
			}
			set
			{
				if ((this._IdDocente != value))
				{
					this.OnIdDocenteChanging(value);
					this.SendPropertyChanging();
					this._IdDocente = value;
					this.SendPropertyChanged("IdDocente");
					this.OnIdDocenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPersona", DbType="Int")]
		public System.Nullable<int> IdPersona
		{
			get
			{
				return this._IdPersona;
			}
			set
			{
				if ((this._IdPersona != value))
				{
					if (this._Persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPersonaChanging(value);
					this.SendPropertyChanging();
					this._IdPersona = value;
					this.SendPropertyChanged("IdPersona");
					this.OnIdPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Docente_Curso", Storage="_Curso", ThisKey="IdDocente", OtherKey="IdDocente")]
		public EntitySet<Curso> Curso
		{
			get
			{
				return this._Curso;
			}
			set
			{
				this._Curso.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Docente", Storage="_Persona", ThisKey="IdPersona", OtherKey="Id", IsForeignKey=true)]
		public Persona Persona
		{
			get
			{
				return this._Persona.Entity;
			}
			set
			{
				Persona previousValue = this._Persona.Entity;
				if (((previousValue != value) 
							|| (this._Persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persona.Entity = null;
						previousValue.Docente.Remove(this);
					}
					this._Persona.Entity = value;
					if ((value != null))
					{
						value.Docente.Add(this);
						this._IdPersona = value.Id;
					}
					else
					{
						this._IdPersona = default(Nullable<int>);
					}
					this.SendPropertyChanged("Persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Curso(Curso entity)
		{
			this.SendPropertyChanging();
			entity.Docente = this;
		}
		
		private void detach_Curso(Curso entity)
		{
			this.SendPropertyChanging();
			entity.Docente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estudiante")]
	public partial class Estudiante : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEstudiante;
		
		private System.Nullable<int> _IdPersona;
		
		private System.Nullable<int> _IdMatricula;
		
		private EntityRef<Matricula> _Matricula;
		
		private EntityRef<Persona> _Persona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEstudianteChanging(int value);
    partial void OnIdEstudianteChanged();
    partial void OnIdPersonaChanging(System.Nullable<int> value);
    partial void OnIdPersonaChanged();
    partial void OnIdMatriculaChanging(System.Nullable<int> value);
    partial void OnIdMatriculaChanged();
    #endregion
		
		public Estudiante()
		{
			this._Matricula = default(EntityRef<Matricula>);
			this._Persona = default(EntityRef<Persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstudiante", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEstudiante
		{
			get
			{
				return this._IdEstudiante;
			}
			set
			{
				if ((this._IdEstudiante != value))
				{
					this.OnIdEstudianteChanging(value);
					this.SendPropertyChanging();
					this._IdEstudiante = value;
					this.SendPropertyChanged("IdEstudiante");
					this.OnIdEstudianteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPersona", DbType="Int")]
		public System.Nullable<int> IdPersona
		{
			get
			{
				return this._IdPersona;
			}
			set
			{
				if ((this._IdPersona != value))
				{
					if (this._Persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPersonaChanging(value);
					this.SendPropertyChanging();
					this._IdPersona = value;
					this.SendPropertyChanged("IdPersona");
					this.OnIdPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMatricula", DbType="Int")]
		public System.Nullable<int> IdMatricula
		{
			get
			{
				return this._IdMatricula;
			}
			set
			{
				if ((this._IdMatricula != value))
				{
					if (this._Matricula.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMatriculaChanging(value);
					this.SendPropertyChanging();
					this._IdMatricula = value;
					this.SendPropertyChanged("IdMatricula");
					this.OnIdMatriculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Matricula_Estudiante", Storage="_Matricula", ThisKey="IdMatricula", OtherKey="IdMatricula", IsForeignKey=true)]
		public Matricula Matricula
		{
			get
			{
				return this._Matricula.Entity;
			}
			set
			{
				Matricula previousValue = this._Matricula.Entity;
				if (((previousValue != value) 
							|| (this._Matricula.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Matricula.Entity = null;
						previousValue.Estudiante.Remove(this);
					}
					this._Matricula.Entity = value;
					if ((value != null))
					{
						value.Estudiante.Add(this);
						this._IdMatricula = value.IdMatricula;
					}
					else
					{
						this._IdMatricula = default(Nullable<int>);
					}
					this.SendPropertyChanged("Matricula");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Estudiante", Storage="_Persona", ThisKey="IdPersona", OtherKey="Id", IsForeignKey=true)]
		public Persona Persona
		{
			get
			{
				return this._Persona.Entity;
			}
			set
			{
				Persona previousValue = this._Persona.Entity;
				if (((previousValue != value) 
							|| (this._Persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persona.Entity = null;
						previousValue.Estudiante.Remove(this);
					}
					this._Persona.Entity = value;
					if ((value != null))
					{
						value.Estudiante.Add(this);
						this._IdPersona = value.Id;
					}
					else
					{
						this._IdPersona = default(Nullable<int>);
					}
					this.SendPropertyChanged("Persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Matricula")]
	public partial class Matricula : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdMatricula;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private System.Nullable<int> _IdRepresentante;
		
		private EntitySet<Estudiante> _Estudiante;
		
		private EntityRef<Persona> _Persona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMatriculaChanging(int value);
    partial void OnIdMatriculaChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnIdRepresentanteChanging(System.Nullable<int> value);
    partial void OnIdRepresentanteChanged();
    #endregion
		
		public Matricula()
		{
			this._Estudiante = new EntitySet<Estudiante>(new Action<Estudiante>(this.attach_Estudiante), new Action<Estudiante>(this.detach_Estudiante));
			this._Persona = default(EntityRef<Persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMatricula", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdMatricula
		{
			get
			{
				return this._IdMatricula;
			}
			set
			{
				if ((this._IdMatricula != value))
				{
					this.OnIdMatriculaChanging(value);
					this.SendPropertyChanging();
					this._IdMatricula = value;
					this.SendPropertyChanged("IdMatricula");
					this.OnIdMatriculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRepresentante", DbType="Int")]
		public System.Nullable<int> IdRepresentante
		{
			get
			{
				return this._IdRepresentante;
			}
			set
			{
				if ((this._IdRepresentante != value))
				{
					if (this._Persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRepresentanteChanging(value);
					this.SendPropertyChanging();
					this._IdRepresentante = value;
					this.SendPropertyChanged("IdRepresentante");
					this.OnIdRepresentanteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Matricula_Estudiante", Storage="_Estudiante", ThisKey="IdMatricula", OtherKey="IdMatricula")]
		public EntitySet<Estudiante> Estudiante
		{
			get
			{
				return this._Estudiante;
			}
			set
			{
				this._Estudiante.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Matricula", Storage="_Persona", ThisKey="IdRepresentante", OtherKey="Id", IsForeignKey=true)]
		public Persona Persona
		{
			get
			{
				return this._Persona.Entity;
			}
			set
			{
				Persona previousValue = this._Persona.Entity;
				if (((previousValue != value) 
							|| (this._Persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persona.Entity = null;
						previousValue.Matricula.Remove(this);
					}
					this._Persona.Entity = value;
					if ((value != null))
					{
						value.Matricula.Add(this);
						this._IdRepresentante = value.Id;
					}
					else
					{
						this._IdRepresentante = default(Nullable<int>);
					}
					this.SendPropertyChanged("Persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Estudiante(Estudiante entity)
		{
			this.SendPropertyChanging();
			entity.Matricula = this;
		}
		
		private void detach_Estudiante(Estudiante entity)
		{
			this.SendPropertyChanging();
			entity.Matricula = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MatriculaCurso")]
	public partial class MatriculaCurso
	{
		
		private System.Nullable<int> _IdMatricula;
		
		private System.Nullable<int> _IdCurso;
		
		public MatriculaCurso()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMatricula", DbType="Int")]
		public System.Nullable<int> IdMatricula
		{
			get
			{
				return this._IdMatricula;
			}
			set
			{
				if ((this._IdMatricula != value))
				{
					this._IdMatricula = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCurso", DbType="Int")]
		public System.Nullable<int> IdCurso
		{
			get
			{
				return this._IdCurso;
			}
			set
			{
				if ((this._IdCurso != value))
				{
					this._IdCurso = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Persona")]
	public partial class Persona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Cedula;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Telefono;
		
		private string _Direccion;
		
		private System.Nullable<System.DateTime> _FechaNacimiento;
		
		private EntitySet<Docente> _Docente;
		
		private EntitySet<Estudiante> _Estudiante;
		
		private EntitySet<Matricula> _Matricula;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCedulaChanging(string value);
    partial void OnCedulaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnFechaNacimientoChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaNacimientoChanged();
    #endregion
		
		public Persona()
		{
			this._Docente = new EntitySet<Docente>(new Action<Docente>(this.attach_Docente), new Action<Docente>(this.detach_Docente));
			this._Estudiante = new EntitySet<Estudiante>(new Action<Estudiante>(this.attach_Estudiante), new Action<Estudiante>(this.detach_Estudiante));
			this._Matricula = new EntitySet<Matricula>(new Action<Matricula>(this.attach_Matricula), new Action<Matricula>(this.detach_Matricula));
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string Cedula
		{
			get
			{
				return this._Cedula;
			}
			set
			{
				if ((this._Cedula != value))
				{
					this.OnCedulaChanging(value);
					this.SendPropertyChanging();
					this._Cedula = value;
					this.SendPropertyChanged("Cedula");
					this.OnCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(MAX)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="VarChar(MAX)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(15)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(MAX)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaNacimiento", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaNacimiento
		{
			get
			{
				return this._FechaNacimiento;
			}
			set
			{
				if ((this._FechaNacimiento != value))
				{
					this.OnFechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._FechaNacimiento = value;
					this.SendPropertyChanged("FechaNacimiento");
					this.OnFechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Docente", Storage="_Docente", ThisKey="Id", OtherKey="IdPersona")]
		public EntitySet<Docente> Docente
		{
			get
			{
				return this._Docente;
			}
			set
			{
				this._Docente.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Estudiante", Storage="_Estudiante", ThisKey="Id", OtherKey="IdPersona")]
		public EntitySet<Estudiante> Estudiante
		{
			get
			{
				return this._Estudiante;
			}
			set
			{
				this._Estudiante.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Matricula", Storage="_Matricula", ThisKey="Id", OtherKey="IdRepresentante")]
		public EntitySet<Matricula> Matricula
		{
			get
			{
				return this._Matricula;
			}
			set
			{
				this._Matricula.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Usuario", Storage="_Usuario", ThisKey="Id", OtherKey="IdPersona")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Docente(Docente entity)
		{
			this.SendPropertyChanging();
			entity.Persona = this;
		}
		
		private void detach_Docente(Docente entity)
		{
			this.SendPropertyChanging();
			entity.Persona = null;
		}
		
		private void attach_Estudiante(Estudiante entity)
		{
			this.SendPropertyChanging();
			entity.Persona = this;
		}
		
		private void detach_Estudiante(Estudiante entity)
		{
			this.SendPropertyChanging();
			entity.Persona = null;
		}
		
		private void attach_Matricula(Matricula entity)
		{
			this.SendPropertyChanging();
			entity.Persona = this;
		}
		
		private void detach_Matricula(Matricula entity)
		{
			this.SendPropertyChanging();
			entity.Persona = null;
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Persona = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Persona = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUsuario;
		
		private string _NombreUsuario;
		
		private string _Contrasena;
		
		private System.Nullable<int> _IdPersona;
		
		private EntityRef<Persona> _Persona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnNombreUsuarioChanging(string value);
    partial void OnNombreUsuarioChanged();
    partial void OnContrasenaChanging(string value);
    partial void OnContrasenaChanged();
    partial void OnIdPersonaChanging(System.Nullable<int> value);
    partial void OnIdPersonaChanged();
    #endregion
		
		public Usuario()
		{
			this._Persona = default(EntityRef<Persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreUsuario", DbType="VarChar(25)")]
		public string NombreUsuario
		{
			get
			{
				return this._NombreUsuario;
			}
			set
			{
				if ((this._NombreUsuario != value))
				{
					this.OnNombreUsuarioChanging(value);
					this.SendPropertyChanging();
					this._NombreUsuario = value;
					this.SendPropertyChanged("NombreUsuario");
					this.OnNombreUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contrasena", DbType="VarChar(10)")]
		public string Contrasena
		{
			get
			{
				return this._Contrasena;
			}
			set
			{
				if ((this._Contrasena != value))
				{
					this.OnContrasenaChanging(value);
					this.SendPropertyChanging();
					this._Contrasena = value;
					this.SendPropertyChanged("Contrasena");
					this.OnContrasenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPersona", DbType="Int")]
		public System.Nullable<int> IdPersona
		{
			get
			{
				return this._IdPersona;
			}
			set
			{
				if ((this._IdPersona != value))
				{
					if (this._Persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPersonaChanging(value);
					this.SendPropertyChanging();
					this._IdPersona = value;
					this.SendPropertyChanged("IdPersona");
					this.OnIdPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Usuario", Storage="_Persona", ThisKey="IdPersona", OtherKey="Id", IsForeignKey=true)]
		public Persona Persona
		{
			get
			{
				return this._Persona.Entity;
			}
			set
			{
				Persona previousValue = this._Persona.Entity;
				if (((previousValue != value) 
							|| (this._Persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persona.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Persona.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._IdPersona = value.Id;
					}
					else
					{
						this._IdPersona = default(Nullable<int>);
					}
					this.SendPropertyChanged("Persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SP_Listar_UsuariosResult
	{
		
		private int _IdUsuario;
		
		private string _NombreUsuario;
		
		private string _Contrasena;
		
		private System.Nullable<int> _IdPersona;
		
		public SP_Listar_UsuariosResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this._IdUsuario = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreUsuario", DbType="VarChar(25)")]
		public string NombreUsuario
		{
			get
			{
				return this._NombreUsuario;
			}
			set
			{
				if ((this._NombreUsuario != value))
				{
					this._NombreUsuario = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contrasena", DbType="VarChar(10)")]
		public string Contrasena
		{
			get
			{
				return this._Contrasena;
			}
			set
			{
				if ((this._Contrasena != value))
				{
					this._Contrasena = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPersona", DbType="Int")]
		public System.Nullable<int> IdPersona
		{
			get
			{
				return this._IdPersona;
			}
			set
			{
				if ((this._IdPersona != value))
				{
					this._IdPersona = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
